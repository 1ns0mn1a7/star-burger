services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: starburger
      POSTGRES_USER: starburger
      POSTGRES_PASSWORD: burgerpass
    volumes:
      - /opt/starburger/pgdata:/var/lib/postgresql/data

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    command: gunicorn --bind 0.0.0.0:8000 star_burger.wsgi:application
    env_file:
      - .env
    depends_on:
      - db
    volumes:
      - /opt/starburger/star-burger/static:/app/staticfiles
      - /opt/starburger/star-burger/media:/app/media
      - ./bundles:/app/bundles

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    restart: always
    command: npm run build
    volumes:
      - ./bundles-src:/frontend/bundles-src
      - ./bundles:/frontend/bundles

  nginx:
    image: nginx:alpine
    restart: always
    depends_on:
      - backend
      - frontend
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - /opt/starburger/star-burger/static:/var/www/static
      - /opt/starburger/star-burger/media:/var/www/media
      - ./bundles:/var/www/frontend
      - /opt/starburger/certbot/www:/var/www/certbot
